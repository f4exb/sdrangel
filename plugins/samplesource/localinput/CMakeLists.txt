project(localinput)

set(localinput_SOURCES
  localinput.cpp
  localinputsettings.cpp
  localinputwebapiadapter.cpp
  localinputplugin.cpp
  )

set(localinput_HEADERS
  localinput.h
  localinputsettings.h
  localinputwebapiadapter.h
  localinputplugin.h
  )


include_directories(
  ${CMAKE_SOURCE_DIR}/swagger/sdrangel/code/qt5/client
  )

if(NOT SERVER_MODE)
  set(localinput_SOURCES
    ${localinput_SOURCES}
    localinputgui.cpp

    localinputgui.ui
    )
  set(localinput_HEADERS
    ${localinput_HEADERS}
    localinputgui.h
    )

  set(TARGET_NAME ${PLUGINS_PREFIX}inputlocal)
  set(TARGET_LIB "Qt::Widgets")
  set(TARGET_LIB_GUI "sdrgui")
  set(INSTALL_FOLDER ${INSTALL_PLUGINS_DIR})
else()
  set(TARGET_NAME ${PLUGINSSRV_PREFIX}inputlocalsrv)
  set(TARGET_LIB "")
  set(TARGET_LIB_GUI "")
  set(INSTALL_FOLDER ${INSTALL_PLUGINSSRV_DIR})
endif()

if(NOT Qt6_FOUND)
    add_library(${TARGET_NAME} ${localinput_SOURCES})
else()
    qt_add_plugin(${TARGET_NAME} CLASS_NAME LocalInputPlugin ${localinput_SOURCES})
endif()

if(NOT BUILD_SHARED_LIBS)
    set_property(GLOBAL APPEND PROPERTY STATIC_PLUGINS_PROPERTY ${TARGET_NAME})
endif()

if (EMSCRIPTEN AND BUILD_SHARED_LIBS)
    target_link_options(${TARGET_NAME} PUBLIC -sEXPORT_NAME=${TARGET_NAME} -sSIDE_MODULE)
endif()

target_link_libraries(${TARGET_NAME} PRIVATE
        Qt::Core
        ${TARGET_LIB}
	sdrbase
	${TARGET_LIB_GUI}
        swagger
)

install(TARGETS ${TARGET_NAME} DESTINATION ${INSTALL_FOLDER})

# Install debug symbols
if (WIN32)
    install(FILES $<TARGET_PDB_FILE:${TARGET_NAME}> CONFIGURATIONS Debug RelWithDebInfo DESTINATION ${INSTALL_FOLDER} )
endif()
